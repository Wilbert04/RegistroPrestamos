@page "/Personas"
@page "/Personas/{PersonaId:int}"


@using Prestamos.Models
@using Prestamos.BLL

@using Blazored.Toast
@using Blazored.Toast.Services

@inject IToastService Toast

<EditForm Model="personas" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />

    <div class="card">

        <div class="card-header">

            <h3>Registro de Personas</h3>
        </div>

        <div class="card-body">
            <form>
                <div class="form-row align-items-center">
                    <div class="col">
                        <div class="form-group">
                            <label>PersonaId:</label>
                            <div class="input-group">
                                <InputNumber @bind-Value="personas.PersonaId" class="form-control col-4" />
                                <ValidationMessage For="(() => personas.PersonaId)"></ValidationMessage>
                                <div class="input-group-append">
                                    <button type="button" class="btn btn-primary input-group-text" @onclick="Buscar">Buscar</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                @*Nombres*@
                <div class="form-group">
                    <label>Nombre:</label>
                    <InputText @bind-Value="personas.Nombre" class="form-control" />
                    <ValidationMessage For="@(() => personas.Nombre)" />
                </div>

                @*Telefono*@
                <div class="form-group">
                    <label>Telefono:</label>
                    <InputText @bind-Value="personas.Telefono" class="form-control" />
                    <ValidationMessage For="@(() => personas.Telefono)" />
                </div>

                @*Cedula*@
                <div class="form-group">
                    <label>Cedula:</label>
                    <InputText @bind-Value="personas.Cedula" class="form-control" />
                    <ValidationMessage For="@(() => personas.Cedula)" />
                </div>

                @*Direccion*@
                <div class="form-group">
                    <label>Dirección:</label>
                    <InputText @bind-Value="personas.Direccion" class="form-control" />
                    <ValidationMessage For="@(() => personas.Direccion)" />
                </div>

                @*Fecha*@
                <div class="form-group">
                    <label>Fecha de nacimiento:</label>
                    <InputDate @bind-Value="personas.FechaNacimiento" class="form-control" />
                    <ValidationMessage For="@(() => personas.FechaNacimiento)" />
                </div>

                @*Balance*@
                <div class="form-group">
                    <label>Balance:</label>
                    <InputNumber @bind-Value="personas.Balance" readonly="true" class="form-control" />
                    <ValidationMessage For="@(() => personas.Balance)" />
                </div>
            </form>
        </div>

        <div class="card-footer">
            <div class="form-group text-center" display: inline-block>
                <button type="button" class="btn btn-lg btn-secondary" @onclick="Nuevo">Nuevo</button>
                <button type="submit" class="btn btn-lg btn-success">Guardar</button>
                <button type="button" class="btn btn-lg btn-danger" @onclick="Eliminar">Eliminar</button>
            </div>
        </div>

    </div>

</EditForm>

@code {

    [Parameter]
    public int PersonaId { get; set; }

    Personas personas = new Personas();

    protected override void OnInitialized()
    {
        Nuevo();
        Buscar();
    }

    private void Nuevo()
    {
        this.personas = new Personas();
    }

    private void Buscar()
    {
        if (personas.PersonaId > 0)
        {
            var encontrado = PersonasBLL.Buscar(personas.PersonaId);
            if (encontrado != null)
                this.personas = encontrado;
            else
                Toast.ShowWarning("No encontado");
        }
    }

    private void Guardar()
    {
        bool guardo;
        guardo = PersonasBLL.Guardar(personas);

        if (guardo)
        {
            Nuevo();
            Toast.ShowSuccess("Guardado correctamente");
        }
        else
        {
            Toast.ShowSuccess("No se guardo");
        }
    }

    private void Eliminar()
    {
        bool elimino;

        elimino = PersonasBLL.Eliminar(personas.PersonaId);

        if (elimino)
        {
            Nuevo();
            Toast.ShowSuccess("Eliminado correctamente");
        }
    }



}
